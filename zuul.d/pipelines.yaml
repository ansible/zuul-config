---
- pipeline:
    name: check
    description: |
      Newly uploaded patchsets enter this pipeline to receive an
      initial +/-1 Verified vote.
    manager: independent
    trigger:
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    start:
      github.com:
        status: 'pending'
        status-url: 'https://ansible.softwarefactory-project.io/zuul/status.html'
        comment: false
    success:
      github.com:
        status: 'success'
      sqlreporter:
    failure:
      github.com:
        status: 'failure'
      sqlreporter:

- pipeline:
    name: gate
    description: |
      Changes that have been approved by core developers are enqueued
      in order in this pipeline, and if they pass tests, will be
      merged.
    success-message: Build succeeded (gate pipeline).
    failure-message: |
      Build failed (gate pipeline).  For information on how to proceed, see
      http://docs.openstack.org/infra/manual/developers.html#automated-testing
    manager: dependent
    precedence: high
    require:
      github.com:
        review:
          - permission: write
            type: approved
        label:
          - mergeit
        status: "softwarefactory-project-zuul\\[bot\\]:ansible/check:success"
        open: True
        current-patchset: True
    trigger:
      github.com:
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request
          action: status
          status: "softwarefactory-project-zuul\\[bot\\]:ansible/check:success"
        - event: pull_request
          action: labeled
          label:
            - mergeit
    start:
      github.com:
        status: 'pending'
        status-url: 'https://ansible.softwarefactory-project.io/zuul/status.html'
        comment: false
    success:
      github.com:
        status: 'success'
        merge: true
      sqlreporter:
    failure:
      github.com:
        status: 'failure'
      sqlreporter:
    window-floor: 20
    window-increase-factor: 2

- pipeline:
    name: merge-check
    description: >
      Each time a change merges, this pipeline verifies that all open changes
      on the same project are still mergeable.
    failure-message: Build failed (merge-check pipeline).
    manager: independent
    ignore-dependencies: true
    precedence: low
    trigger: {}

- pipeline:
    name: post
    post-review: true
    description: This pipeline runs jobs that operate after each change is merged.
    manager: independent
    precedence: low
    trigger:
      github.com:
        - event: push
    success:
      sqlreporter:
    failure:
      sqlreporter:

- pipeline:
    name: periodic
    post-review: true
    description: Jobs in this queue are triggered daily.
    manager: independent
    precedence: low
    trigger:
      timer:
        - time: '0 0 * * *'
    success:
      sqlreporter:
    failure:
      sqlreporter:

- pipeline:
    name: third-party-check
    description: |
      Newly uploaded patchsets to projects that are external to OpenStack
      enter this pipeline to receive an initial +/-1 Verified vote.
    success-message: Build succeeded (third-party-check pipeline).
    # TODO(mordred) We should write a document for non-OpenStack developers
    failure-message: |
      Build failed (third-party-check pipeline) integration testing with
      OpenStack. For information on how to proceed, see
      http://docs.openstack.org/infra/manual/developers.html#automated-testing
    manager: independent
    trigger:
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    start:
      github.com:
        status: 'pending'
        status-url: 'https://ansible.softwarefactory-project.io/zuul/status.html'
        comment: false
    success:
      github.com:
        status: 'success'
      sqlreporter:
    failure:
      github.com:
        status: 'failure'
      sqlreporter:
    # Don't report merge-failures to github
    merge-failure:
        sqlreporter:
